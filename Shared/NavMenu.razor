@using SimpleAuthenticationApp.Authentication
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<CascadingAuthenticationState>
    <div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">SimpleAuthenticationApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">

        

        <AuthorizeView Roles="Administrator">
            <Authorized>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Home" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="counter">
                        <span class="oi oi-plus" aria-hidden="true"></span> Counter
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="fetchdata">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                    </NavLink>
                </div>

                <div class="links">
                        <a>Welcome, @context.User.Identity.Name</a>
                        <a @onclick="Logout" href="javascript:void(0)">Logout</a>
                </div>
            </Authorized>
        </AuthorizeView>
        
    </nav>
</div>
</CascadingAuthenticationState>

<style>
    .links a{
        background-color:white;
    }
</style>


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }
}
